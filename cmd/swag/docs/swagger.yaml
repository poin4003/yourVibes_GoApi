basePath: /v1/2024
definitions:
  auth_dto.LoginCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth_dto.RegisterCredentials:
    properties:
      birthday:
        type: string
      email:
        type: string
      family_name:
        type: string
      name:
        type: string
      otp:
        type: string
      password:
        minLength: 8
        type: string
      phone_number:
        type: string
    required:
    - birthday
    - email
    - family_name
    - name
    - otp
    - password
    - phone_number
    type: object
  auth_dto.VerifyEmailInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  response.ErrResponse:
    properties:
      error:
        $ref: '#/definitions/response.ErrResponseChild'
    type: object
  response.ErrResponseChild:
    properties:
      code:
        type: integer
      detail_err:
        type: string
      message:
        type: string
    type: object
  response.PagingResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  response.ResponseData:
    properties:
      code:
        description: Status code
        type: integer
      data:
        description: Data
      message:
        description: Status message
        type: string
      paging:
        allOf:
        - $ref: '#/definitions/response.PagingResponse'
        description: Paging (optional)
    type: object
host: localhost:8080
info:
  contact:
    email: pchuy4003@gmail.com
    name: TEAM HKTP
    url: https://github.com/poin4003/yourVibes_GoApi
  description: This is a sample YourVibes backend server
  termsOfService: https://github.com/poin4003/yourVibes_GoApi
  title: API Documentation YourVibes backend
  version: 1.0.0
paths:
  /posts/:
    post:
      consumes:
      - multipart/form-data
      description: When user create post
      parameters:
      - description: Title of the post
        in: formData
        name: title
        required: true
        type: string
      - description: Content of the post
        in: formData
        name: content
        required: true
        type: string
      - description: Privacy level
        in: formData
        name: privacy
        required: true
        type: string
      - description: Location of the post
        in: formData
        name: location
        type: string
      - description: Media files for the post
        in: formData
        name: media
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Post create post
      tags:
      - post
  /posts/{postId}:
    delete:
      consumes:
      - application/json
      description: when user want to delete post
      parameters:
      - description: Post ID
        in: path
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: delete post by ID
      tags:
      - post
    get:
      consumes:
      - application/json
      description: Retrieve a post by its unique ID
      parameters:
      - description: Post ID
        in: path
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Get post by ID
      tags:
      - post
    patch:
      consumes:
      - multipart/form-data
      description: When user need to update information of post or update media
      parameters:
      - description: PostId
        in: path
        name: postId
        required: true
        type: string
      - description: Post title
        in: formData
        name: title
        type: string
      - description: Post content
        in: formData
        name: content
        type: string
      - description: Post privacy
        in: formData
        name: privacy
        required: true
        type: string
      - description: Post location
        in: formData
        name: location
        type: string
      - description: Array of mediaIds you want to delete
        in: formData
        name: media_ids
        type: integer
      - description: Array of media you want to upload
        in: formData
        name: media
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: update post
      tags:
      - post
  /posts/getMany/{userId}:
    get:
      consumes:
      - application/json
      description: Retrieve multiple posts filtered by various criteria.
      parameters:
      - description: User ID to filter posts
        in: path
        name: userId
        required: true
        type: string
      - description: Filter by post title
        in: query
        name: title
        type: string
      - description: Filter by content
        in: query
        name: content
        type: string
      - description: Filter by location
        in: query
        name: location
        type: string
      - description: Filter by advertisement
        in: query
        name: is_advertisement
        type: boolean
      - description: Filter by creation time
        in: query
        name: created_at
        type: string
      - description: Which column to sort by
        in: query
        name: sort_by
        type: string
      - description: Order by descending if true
        in: query
        name: isDescending
        type: boolean
      - description: Limit of posts per page
        in: query
        name: limit
        type: integer
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Get many posts
      tags:
      - post
  /users/:
    get:
      consumes:
      - application/json
      description: Retrieve users based on filters such as name, email, phone number,
        birthday, and created date. Supports pagination and sorting.
      parameters:
      - description: name to filter users
        in: query
        name: name
        type: string
      - description: Filter by email
        in: query
        name: email
        type: string
      - description: Filter by phone number
        in: query
        name: phone_number
        type: string
      - description: Filter by birthday
        in: query
        name: birthday
        type: string
      - description: Filter by creation day
        in: query
        name: created_at
        type: string
      - description: Sort by field
        in: query
        name: sort_by
        type: string
      - description: Sort in descending order
        in: query
        name: isDescending
        type: boolean
      - description: Number of results per page
        in: query
        name: limit
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a list of users
      tags:
      - user
    patch:
      consumes:
      - multipart/form-data
      description: Update various fields of the user profile including name, email,
        phone number, birthday, and upload avatar and capwall images.
      parameters:
      - description: User's family name
        in: formData
        name: family_name
        type: string
      - description: User's given name
        in: formData
        name: name
        type: string
      - description: User's email address
        in: formData
        name: email
        type: string
      - description: User's phone number
        in: formData
        name: phone_number
        type: string
      - description: User's birthday
        in: formData
        name: birthday
        type: string
      - description: Upload user avatar image
        in: formData
        name: avatar_url
        type: file
      - description: Upload user capwall image
        in: formData
        name: capwall_url
        type: file
      - description: User privacy level
        in: formData
        name: privacy
        required: true
        type: string
      - description: User biography
        in: formData
        name: biography
        type: string
      - description: 'Setting language '
        in: formData
        name: language_setting
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user information
      tags:
      - user
  /users/{userId}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by its unique ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - user
  /users/login/:
    post:
      consumes:
      - application/json
      description: When user login
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth_dto.LoginCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: User login
      tags:
      - auth
  /users/register/:
    post:
      consumes:
      - application/json
      description: When user registration
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth_dto.RegisterCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: User Registration
      tags:
      - auth
  /users/verifyemail/:
    post:
      consumes:
      - application/json
      description: Before user registration
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth_dto.VerifyEmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: User verify email
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: Token without 'Bearer ' prefix
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
