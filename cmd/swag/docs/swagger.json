{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample YourVibes backend server",
        "title": "API Documentation YourVibes backend",
        "termsOfService": "https://github.com/poin4003/yourVibes_GoApi",
        "contact": {
            "name": "TEAM HKTP",
            "url": "https://github.com/poin4003/yourVibes_GoApi",
            "email": "pchuy4003@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "yourvibes.duckdns.org:8080",
    "basePath": "/v1/2024",
    "paths": {
        "/admins": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to update info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "update admin",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAdminInfoRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admins/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve admins based on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "super_admin"
                ],
                "summary": "Get a list of admins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to filter admins",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by identity id",
                        "name": "identity_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by birthday",
                        "name": "birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation day",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort in descending order",
                        "name": "is_descending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/admins/change_password/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_auth"
                ],
                "summary": "admin change password",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangeAdminPasswordRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admins/login/": {
            "post": {
                "description": "When user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_auth"
                ],
                "summary": "Admin login",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AdminLoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admins/super_admin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When super admin need to create new admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "super_admin"
                ],
                "summary": "Create admin",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAdminRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When super admin need to update role and status of admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "super_admin"
                ],
                "summary": "update admin",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAdminForSuperAdminRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admins/super_admin/forgot_admin_password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When super admin change admin password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "super_admin"
                ],
                "summary": "Admin forgot password",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ForgotAdminPasswordRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/admins/{admin_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve admin by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "super_admin"
                ],
                "summary": "Get admin by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "admin_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/advertise/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get many advertise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertise_user"
                ],
                "summary": "Get many advertise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post_id to filter ads",
                        "name": "post_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of ads per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user want to create advertise by post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertise_user"
                ],
                "summary": "Create advertise",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAdvertiseRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/advertise/admin": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve advertise base on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_advertise_report"
                ],
                "summary": "Get a list of advertise",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to get advertise",
                        "name": "post_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user email",
                        "name": "user_email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by from date",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by to date",
                        "name": "to_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by from price",
                        "name": "from_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by to price",
                        "name": "to_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort in descending order",
                        "name": "is_descending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/advertise/statistic/{advertise_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve advertise with statistic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertise_user"
                ],
                "summary": "Get advertise with statistic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advertise ID",
                        "name": "advertise_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/advertise/{advertise_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve advertise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_advertise_report"
                ],
                "summary": "Get advertise detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advertise ID",
                        "name": "advertise_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/comments/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple comment filtered by various criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "Get many comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID to filter comment, get the first layer",
                        "name": "post_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by parent id, get the next layer",
                        "name": "parent_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create comment or rep comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "Comment create comment",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/comments/like_comment/{comment_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple user is like comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_comment"
                ],
                "summary": "Get User like comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID to get user like comment",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of users per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user like comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_comment"
                ],
                "summary": "Like comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID to create like comment",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/comments/{comment_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "when user want to delete comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "delete comment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to update information of comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment_user"
                ],
                "summary": "update comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commentId",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCommentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create conversationDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "ConversationDetail create ConversationDatail",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateConversationDetailRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/create_many": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create many conversationDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "Create many conversationDetail",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateManyConversationDetailRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/delete/{user_id}/{conversation_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "when user delete conversationDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "Delete conversationDetail by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/get_by_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a conversationDetail by its unique Conversation ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "Get conversationDetail by Conversation Id response List User in Conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/get_by_id/{userId}/{conversationId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a conversationDetail by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "Get conversationDetail by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Conversation ID",
                        "name": "conversationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/transfer_owner_role": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "transfer owner role",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TransferOwnerRoleDto"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/conversation_details/update": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversationDetail"
                ],
                "summary": "Update conversationDetail status to false",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateConversationDetail"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/conversations/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user get many conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Get many conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the conversation",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created at",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Is descending",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of conversation per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create conversation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Conversation create Conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the conversation",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image of the conversation",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "List of user IDs",
                        "name": "user_ids",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/conversations/{conversation_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a conversation by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "Get conversation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "when user want to delete conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "delete conversation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to update conversation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "conversation"
                ],
                "summary": "update conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ConversationId",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the conversation",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image of the conversation",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/messages/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Message create Message",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateMessageRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/messages/get_by_conversation_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve messages by conversation ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get messages by conversation ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ConversationId",
                        "name": "conversation_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation time",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Which column to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Order by descending if true",
                        "name": "is_descending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/messages/message/{messageId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a message by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get message by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "messageId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/message/{message_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user delete message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Delete message by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/messages/ws/{user_id}": {
            "get": {
                "description": "Establish a WebSocket connection for real-time messaging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Connect to WebSocket",
                "responses": {}
            }
        },
        "/notification": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Get notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter notifications by sender",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter notifications by type",
                        "name": "notification_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter notifications created at this date",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort notifications by this field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort notifications in descending order",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of notifications returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination: page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/notification/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Update all notification status to false",
                "responses": {}
            }
        },
        "/notification/ws/{user_id}": {
            "get": {
                "description": "Establish a WebSocket connection for real-time notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Connect to WebSocket",
                "responses": {}
            }
        },
        "/notification/{notification_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_notification"
                ],
                "summary": "Update notification status to false",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/posts/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple posts filtered by various criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Get many posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to filter posts",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by content",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by advertisement",
                        "name": "is_advertisement",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation time",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Which column to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Order by descending if true",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user create post",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Post create post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Privacy level",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Location of the post",
                        "name": "location",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Media files for the post",
                        "name": "media",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/posts/like_post/{post_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple posts filtered by various criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_post"
                ],
                "summary": "Get User like posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID to get user like post",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user like post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "like_post"
                ],
                "summary": "Like Post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID to create like post",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/posts/new_feeds/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of new feed",
                "tags": [
                    "post_new_feed"
                ],
                "summary": "Get a list of new feed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/posts/new_feeds/{post_id}/": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete new feeds",
                "tags": [
                    "post_new_feed"
                ],
                "summary": "DeleteNewFeeds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post_id you want to delete over your newfeed",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/posts/share_post/{post_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user want to share post of another user post's",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_share"
                ],
                "summary": "share post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Privacy level",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Location of the post",
                        "name": "location",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/posts/trending": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve multiple trending posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Get trending posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit of posts per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/posts/{post_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a post by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "Get post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "when user want to delete post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "delete post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to update information of post or update media",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post_user"
                ],
                "summary": "update post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Post content",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Post privacy",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Post location",
                        "name": "location",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Array of mediaIds you want to delete",
                        "name": "media_ids",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Array of media you want to upload",
                        "name": "media",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/report": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve report base on type and filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_report"
                ],
                "summary": "Get a list of report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type to get report",
                        "name": "report_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "reason to filter report",
                        "name": "reason",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation day",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user email",
                        "name": "user_email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by reported user email",
                        "name": "reported_user_email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by admin email",
                        "name": "admin_email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by from date",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by to date",
                        "name": "to_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort in descending order",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to report break our rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "report",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReportRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/report/activate/{report_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to activate user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_report"
                ],
                "summary": "activate user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "report ID",
                        "name": "report_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ActivateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/report/handle_report/{report_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to handle report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_report"
                ],
                "summary": "handle report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Report id",
                        "name": "report_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.HandleReportRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/report/{report_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_report"
                ],
                "summary": "Get report detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Report ID",
                        "name": "report_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "type to get report",
                        "name": "report_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to delete report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin_report"
                ],
                "summary": "delete report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Report id",
                        "name": "report_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/revenue/monthly_revenue": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get monthly revenue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "revenue_admin"
                ],
                "summary": "Get monthly revenue",
                "responses": {}
            }
        },
        "/revenue/system_stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get system stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "revenue_admin"
                ],
                "summary": "Get system stats",
                "responses": {}
            }
        },
        "/systems/all_cache": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to clear all system cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_cache"
                ],
                "summary": "system cache clear",
                "responses": {}
            }
        },
        "/systems/check_expiry_of_advertisement": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "System check and delete expiry advertisement from new feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system push check expiry of advertisement",
                "responses": {}
            }
        },
        "/systems/check_expiry_of_feature_post": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "System check and delete expiry feature post from new feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system push check expiry of feature post",
                "responses": {}
            }
        },
        "/systems/comment_cache": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to clear all comment system cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_cache"
                ],
                "summary": "system comment cache clear",
                "responses": {}
            }
        },
        "/systems/delay_post_created_at/{post_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "system hack to update created_at of post delay to 7 days ago",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system update created_at of post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/systems/expired_advertise/{post_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "system hack to expired 1 of advertise by post id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system expired advertise by post id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/systems/post_cache": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When admin need to clear all post system cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_cache"
                ],
                "summary": "system post cache clear",
                "responses": {}
            }
        },
        "/systems/push_advertise_to_new_feed": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "System push advertisement to new feed by numUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system push advertise to new feed",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NumUsers"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/systems/push_feature_post_to_new_feed": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "System push feature post to new feed by numUsers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system push feature post to new feed",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.NumUsers"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/systems/update_post_and_statistics/{post_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "system hack to update immediately like, comment, statistic of post to viral",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_post"
                ],
                "summary": "system update like, comment, statistics count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostId",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve users based on filters such as name, email, phone number, birthday, and created date. Supports pagination and sorting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_info"
                ],
                "summary": "Get a list of users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name to filter users",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by birthday",
                        "name": "birthday",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation day",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort in descending order",
                        "name": "isDescending",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update various fields of the user profile including name, email, phone number, birthday, and upload avatar and capwall images.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_info"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's family name",
                        "name": "family_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's given name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's phone number",
                        "name": "phone_number",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User's birthday",
                        "name": "birthday",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload user avatar image",
                        "name": "avatar_url",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Upload user capwall image",
                        "name": "capwall_url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User privacy level",
                        "name": "privacy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User biography",
                        "name": "biography",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Setting language ",
                        "name": "language_setting",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/users/app_auth_google/": {
            "post": {
                "description": "When user need google login on mobile app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User app auth google",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppAuthGoogleRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/auth_google/": {
            "post": {
                "description": "When user need google login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User auth google",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AuthGoogleRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/change_password/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "When user need to change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User change password",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/forgot_user_password/": {
            "post": {
                "description": "When user forgot and change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User forgot password",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ForgotUserPasswordRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/birthday/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of friend",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of friend by birthday",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/friend_request": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of friend request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/friend_request/{friend_id}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Send add friend request to another people",
                "tags": [
                    "user_friend"
                ],
                "summary": "Send add friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to send add request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Undo add friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Undo add friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to undo add request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/friend_response/{friend_id}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Accept friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Accept friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to accept friend request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete friend request",
                "tags": [
                    "user_friend"
                ],
                "summary": "Reject friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to reject friend request",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/non_friend/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of non friend",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of user not your friend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/suggestion/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of friend",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of friend suggestion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/{friend_id}/": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "unfriend",
                "tags": [
                    "user_friend"
                ],
                "summary": "unfriend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to unfriend",
                        "name": "friend_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/users/friends/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of friend",
                "tags": [
                    "user_friend"
                ],
                "summary": "Get a list of friend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id you want to get a friend list",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit on page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/users/get_otp_forgot_user_password/": {
            "post": {
                "description": "Before forgot password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User get otp forgot user password",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetOtpForgotUserPasswordRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/login/": {
            "post": {
                "description": "When user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/register/": {
            "post": {
                "description": "When user registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/verifyemail/": {
            "post": {
                "description": "Before user registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_auth"
                ],
                "summary": "User verify email",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VerifyEmailRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/users/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a user by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_info"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "consts.Platform": {
            "type": "string",
            "enum": [
                "web",
                "android",
                "ios"
            ],
            "x-enum-varnames": [
                "WEB",
                "ANDROID",
                "IOS"
            ]
        },
        "consts.ReportType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "USER_REPORT",
                "POST_REPORT",
                "COMMENT_REPORT"
            ]
        },
        "request.ActivateRequest": {
            "type": "object",
            "properties": {
                "report_type": {
                    "$ref": "#/definitions/consts.ReportType"
                }
            }
        },
        "request.AdminLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.AppAuthGoogleRequest": {
            "type": "object",
            "properties": {
                "open_id": {
                    "type": "string"
                },
                "platform": {
                    "$ref": "#/definitions/consts.Platform"
                },
                "redirect_url": {
                    "type": "string"
                }
            }
        },
        "request.AuthGoogleRequest": {
            "type": "object",
            "properties": {
                "authorization_code": {
                    "type": "string"
                },
                "platform": {
                    "$ref": "#/definitions/consts.Platform"
                },
                "redirect_url": {
                    "type": "string"
                }
            }
        },
        "request.ChangeAdminPasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "request.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "request.CreateAdminRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "identity_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "boolean"
                }
            }
        },
        "request.CreateAdvertiseRequest": {
            "type": "object",
            "required": [
                "end_date",
                "post_id",
                "redirect_url",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "voucher_code": {
                    "type": "string"
                }
            }
        },
        "request.CreateCommentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateConversationDetailRequest": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateManyConversationDetailRequest": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "user_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.CreateMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "string"
                },
                "parent_content": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/request.userDto"
                }
            }
        },
        "request.ForgotAdminPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "request.ForgotUserPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "request.GetOtpForgotUserPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "request.HandleReportRequest": {
            "type": "object",
            "properties": {
                "report_type": {
                    "$ref": "#/definitions/consts.ReportType"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.NumUsers": {
            "type": "object",
            "properties": {
                "num_users": {
                    "type": "integer"
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "family_name",
                "name",
                "otp",
                "password",
                "phone_number"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "request.ReportRequest": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "reported_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/consts.ReportType"
                }
            }
        },
        "request.TransferOwnerRoleDto": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.UpdateAdminForSuperAdminRequest": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "string"
                },
                "role": {
                    "type": "boolean"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "request.UpdateAdminInfoRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "identity_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "request.UpdateCommentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "request.UpdateConversationDetail": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.VerifyEmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "request.userDto": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Token with 'Bearer ' prefix",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}